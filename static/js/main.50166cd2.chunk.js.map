{"version":3,"sources":["App.js","index.js"],"names":["App","react_development_default","a","createElement","className","rootElement","document","getElementById","ReactDOM","render","src_App"],"mappings":"oIAUeA,MARf,WACC,OACCC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAf,gBCyPIC,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OAAOR,EAAAC,EAAAC,cAACO,EAAD,MAASL","file":"static/js/main.50166cd2.chunk.js","sourcesContent":["import React, { Component } from \"react/cjs/react.development\";\n\nfunction App() {\n\treturn (\n\t\t<div className=\"App\">\n\t\t\tHello World\n\t\t</div>\n\t);\n}\n\nexport default App;","import React, { Component } from \"react/cjs/react.development\";\nimport ReactDOM from \"react-dom\";\nimport App from './App';\n// // import ReactDOMServer from 'react-dom/server';\n// import data from \"./data.json\";\n// import \"./styles/styles.css\";\n// import Board from \"./board\";\n\n// var flag, counter; \n\n// // const thermoElectives = ReactDOMServer.renderToStaticMarkup(\n// // \t<div className=\"choose-elective-container\">\n// // \t\t<select name=\"electives\" className=\"choose-elective\" onChange=\"chooseElective(20)\">\n// // \t\t<option value=\"MEEN406\">MEEN 406 - Energy Management in Industry</option>\n// // \t\t<option value=\"MEEN410\">MEEN 410 - Internal Combustion Engines</option>\n// // \t\t<option value=\"MEEN414\">MEEN 414 - Principles of Turbomachinery</option>\n// // \t\t<option value=\"MEEN-417\">MEEN 417 - Basics of Plasma Engineering and Applications</option>\n// // \t\t</select>\n// // \t\t<button>Button A</button>\n// // \t\t<button>Button B</button>\n// // \t</div>\n// // );\n\n// function showDescription(cardId, metadata, laneId) {\n// \tvar container = document.querySelector('.check-body');\n// \tvar title = document.querySelector('.description-title');\n// \tvar credit = document.querySelector('.description-credit');\n// \tvar body = document.querySelector('.description-body');\n// \tvar footer = document.querySelector('.description-footer');\n// \t// var elective;\n// \t// var electivePicker;\n\n// \tcontainer.innerHTML = '';\n// \ttitle.innerHTML = '';\n// \tcredit.innerHTML = '';\n// \tbody.innerHTML = '';\n// \tfooter.innerHTML = '';\n\n// \tif(!cardId.startsWith('newCard')) {\n// \t\tswitch(cardId) {\n// \t\t// case 'MEENELE1':\n// \t\t// \telective = document.querySelector(`[data-id=\"${cardId}\"]`)\n// \t\t// \ttitle.innerHTML = 'Thermo-fluid and Energy Systems Electives';\n// \t\t// \t// body.innerHTML = thermoElectives;\n// \t\t// \t// electivePicker.setAttribute('onchange', `chooseElective(${document.querySelector('.choose-elective').value})`);\n// \t\t// \tbreak;\n\n// \t\t// case 'MEENELE2': \n// \t\t// \telective = document.querySelector(`[data-id=\"${cardId}\"]`)\n// \t\t// \ttitle.innerHTML = 'Mechanical and Manufacturing Systems Electives';\n// \t\t// \tbreak;\n\n// \t\t// case 'MEENELE3':\n// \t\t// \telective = document.querySelector(`[data-id=\"${cardId}\"]`)  \n// \t\t// \ttitle.innerHTML = 'Techical Electives';\n// \t\t// \tbreak;\n\n// \t\t// case 'MEENELE4':\n// \t\t// \telective = document.querySelector(`[data-id=\"${cardId}\"]`)  \n// \t\t// \ttitle.innerHTML = 'MEEN/Non-MEEN Technical Electives';\n// \t\t// \tbreak;\n\n// \t\t// case 'GENELE':\n// \t\t// \telective = document.querySelector(`[data-id=\"${cardId}\"]`)  \n// \t\t// \ttitle.innerHTML = 'General Electives';\n// \t\t// \tbreak; \n\n// \t\tcase 'UCC1':\n// \t\tcase 'UCC2':\n// \t\tcase 'UCC3':\n// \t\tcase 'UCC4':\n// \t\tcase 'UCC5':\n// \t\tcase 'UCC6':\n// \t\t\ttitle.innerHTML = 'UCC Elective';\n// \t\t\tbody.innerHTML = '• POLS 206, POLS 207\\n • 6 credits of American History<br> • 3 credits of Creative Arts<br> • 3 credits of Social/Behavioral Sciences<br><br> 6 credits of International, Cultural Diversity (ICD) must be taken and can be fulfilled by these UCC electives.';\n// \t\t\tfooter.innerHTML = '<a href=\"https://core.tamu.edu/\" target=\"_blank\">core.tamu.edu</a>';\n// \t\t\tbreak;\n\n// \t\tdefault:\n// \t\t\tvar description;\n// \t\t\tmetadata === undefined ? description = 'none' : description = JSON.parse(JSON.stringify(metadata));\n\n// \t\t\ttitle.innerHTML = description.title;\n// \t\t\tcredit.innerHTML = description.credit;\n// \t\t\tbody.innerHTML = description.body;\n// \t\t\tfooter.innerHTML = description.footer;\n// \t\t\tbreak;\n// \t\t}\n// \t}\n// }\n\n// class NewCard extends Component {\n// \tupdateField = (field, evt) => {\n// \t\tthis.setState({ [field]: evt.target.value })\n// \t}\n\n// \thandleAdd = () => {\n// \t\tthis.props.onAdd(this.state)\n// \t}\n\n// \tconfirmAdd = () => {\n// \t\tvar name = document.querySelector('.course-name').value;\n// \t\tvar hours = document.querySelector('.course-hours').value\n// \t\tvar error = document.querySelector('.error');\n\n// \t\tif(name.length > 20) {\n// \t\t\terror.innerHTML = '*Course name too long.';\n// \t\t\treturn;\n// \t\t} else if(name.length === 0) {\n// \t\t\terror.innerHTML = '*Please enter a valid course title';\n// \t\t\treturn;\n// \t\t} else if(Number(hours).toString() === 'NaN' || Number(hours) > 6 || hours === '' || hours.length > 1) {\n// \t\t\terror.innerHTML = '*Please enter a course number between 0 and 6';\n// \t\t\treturn;\n// \t\t} else {\n// \t\t\treturn this.handleAdd();\n// \t\t}\n// \t}\n\n// \trender() {\n// \t\tconst { onCancel } = this.props\n// \t\treturn (\n// \t\t<div className='form-container'>\n// \t\t\t<div className='box'>\n// \t\t\t\t<div className='check-header'>Add Course</div>\n// \t\t\t\t<div className=\"add-course\">\n// \t\t\t\t<input type=\"text\" className='course-name' onChange={evt => this.updateField('title', evt)} placeholder=\"Title\" />\n// \t\t\t\t<input type=\"text\" className='course-hours' onChange={evt => this.updateField('label', evt)} placeholder=\"Hours\" />\n// \t\t\t\t<div className='modal-buttons'>\n// \t\t\t\t\t<div className='button' onClick={this.confirmAdd}>Add</div>\n// \t\t\t\t\t<div className='button' onClick={onCancel}>Cancel</div>\n// \t\t\t\t</div>\n// \t\t\t\t<div className='error'></div>\n// \t\t\t\t</div>\n// \t\t\t</div>\n// \t\t</div>\n// \t\t)\n// \t}\n// }\n\n// class CheckCourses extends Component {\n//   render() {\n//   \treturn(\n//       \t<div className='check-container'>\n// \t\t\t<header className=\"check-header\"></header>\n// \t\t\t<div className=\"check-instructions\">\n// \t\t\t\tAdd a semester or course by clicking +\n// \t\t\t</div>\n// \t\t\t<div className=\"check-body\"></div>\n// \t\t\t<div className=\"check-output\">\n// \t\t\t\t<div className=\"description-title\"></div>\n// \t\t\t\t<div className=\"description-credit\"></div>\n// \t\t\t\t<div className=\"description-body\"></div>\n// \t\t\t\t<div className=\"description-footer\"></div>\n// \t\t\t</div>\n//      \t </div>\n//     );\n//   }\n// }\n\n// function check(post, index, p, list) {\n// \tvar body = document.querySelector('.check-body');\n// \t// body.innerHTML = '';\n// \t// var parent = document.querySelector(`[data-id=\"${list[0]}\"]`).closest('.react-trello-lane').dataset.index;\n\n// \t// console.log(`Thing: ${thing}, Index: ${index}, P: ${p}, List: ${list}`);\n// \tlist.forEach((course) => {\n// \t\tvar parent = document.querySelector(`[data-id=\"${course}\"]`).closest('.react-trello-lane');\n// \t\tcourse = [course.slice(0, 4), ' ', course.slice(4)].join('');\n// \t\tpost = [post.slice(0, 4), ' ', post.slice(4)].join('');\n// \t\tif(Number(parent.dataset.index) >= Number(index) && p) {\n// \t\t\tflag = true; \n// \t\t\tcounter++;\n// \t\t\tif(counter === 1) { body.innerHTML = ''; }\n// \t\t\tbody.innerHTML += `${course} is a prereq of ${post}<br>`;\n// \t\t} else if(Number(parent.dataset.index) > Number(index) && !p) {\n// \t\t\tflag = true;\n// \t\t\tcounter++;\n// \t\t\tif(counter === 1) { body.innerHTML = ''; }\n// \t\t\tbody.innerHTML += `${course} is a coreq of ${post} \\n<br>`;\n// \t\t}\n// \t});\n\n// \tif(!flag) {\n// \t\tdocument.querySelector('.check-body').innerHTML = 'All of your courses are good.';\n// \t\tconsole.log('Body Empty');\n// \t}\n// }\n\n// function checkCourses() {\n// \tdocument.querySelector('.check-body').innerHTML = '';\n// \tdocument.querySelector('.description-title').innerHTML = '';\n// \tdocument.querySelector('.description-title').innerHTML = '';\n// \tdocument.querySelector('.description-credit').innerHTML = '';\n// \tdocument.querySelector('.description-body').innerHTML = '';\n// \tdocument.querySelector('.description-footer').innerHTML = '';\n// \tflag = false;\n// \tcounter = 0; \n\n// \t// var cardParent = firstCard.closest('.react-trello-lane');\n// \t// console.log(cardParent.dataset.order);\n\n// \tvar allCourses = document.querySelectorAll('.react-trello-card');\n\n// \tallCourses.forEach((course) => {\n// \t\tif (course.dataset.id[8] === undefined) {\n// \t\t\tvar currentParent = course.closest('.react-trello-lane');\n// \t\t\tvar currentParentIndex = currentParent.dataset.index;\n// \t\t\tvar prereqs = course.dataset.prereqs;\n// \t\t\tvar coreqs = course.dataset.coreqs;\n\n// \t\t\tcoreqs = coreqs.split(',');\n// \t\t\tprereqs = prereqs.split(',');\n\n// \t\t\tif(prereqs[0] === '' && coreqs[0] === '') {\n// \t\t\t\treturn;\n// \t\t\t}\n\n// \t\t\tif(prereqs[0] !== '') {\n// \t\t\t\tcheck(course.dataset.id, currentParentIndex, true, prereqs);\n// \t\t\t}\n\n// \t\t\tif (coreqs[0] !== '') {\n// \t\t\t\tcheck(course.dataset.id, currentParentIndex, false, coreqs);\n// \t\t\t}\n\n// \t\t\treturn;\n// \t\t}\n// \t});\n// }\n\n// function App() {\n// \treturn (\n// \t\t<div className=\"App\">\n// \t\t<Board className='Board' \n// \t\t\tdata={data} \n// \t\t\tdraggable \n// \t\t\teditable \n// \t\t\tcardDragClass=\"draggingCard\"\n// \t\t\tlaneDragClass=\"draggingLane\" \n// \t\t\tlaneDraggable={false} \n// \t\t\taddCardLink={<i className=\"fas fa-plus\"></i>} \n// \t\t\tnewCardTemplate={<NewCard />}\n// \t\t\tonCardClick={showDescription}\n// \t\t></Board>\n// \t\t<div className=\"actions\">\n// \t\t\t<CheckCourses />\n// \t\t\t<div onClick={checkCourses} className='check-courses-btn'>Check Courses</div>\n// \t\t</div>\n// \t\t</div>\n// \t);\n// }\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);"],"sourceRoot":""}